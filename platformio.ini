;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = build
libdeps_dir = /tmp/libdeps
extra_configs =
  lib/OGM-Common/platformio.base.ini



; default build parameters
[config]
build_flags =
  ${config:COMMON.build_flags}
  -D WATCHDOG
  -D PMMODULE
  -D LOGICMODULE
  -D OVERRUN_COUNT=31  # large knx input buffer, high traffic (i.e. KNX-Burst) might lead to missing ACKs (but without this setting, it leads to dropped telegrams!)
  -D EOPR_TIMEOUT=32   # should be always set with OVERRUN_COUNT (currently asuming OVERRUN_COUNT + 1)
  ; -D KNX_AUTO_ADAPT
  ; -D KNX_WAIT_FOR_ADDR # ensures rx of an address (GA or PA) with higher ACK probability, but takes 7ms in knx.loop()!
  ; -D OPENKNX_LOOPTIME_WARNING=13 # should be set with KNX_WAIT_FOR_ADDR to OPENKNX_LOOPTIME_WARNING + 7
lib_deps = 
  adafruit/Adafruit VEML7700 Library @ 2.1.0
  
; build parameters for RP2040 only
[config:RP2040]
build_flags = 
  ${config.build_flags}
  ${config:KNX_FLASH_RP2040.build_flags}
  -D SERIAL_DEBUG=Serial
  -D SERIAL_HF=Serial2
  -D PIO_FRAMEWORK_ARDUINO_ENABLE_RTTI
  -D LWIP_DONT_PROVIDE_BYTEORDER_FUNCTIONS
  -Wunused-variable
  -O0
lib_deps = 
  ${config.lib_deps}
  ${config:COMMON.lib_deps}

; build parameters for SAMD only
[config:SAMD]
build_flags = 
  ${config.build_flags}
  ${config:KNX_FLASH_SAMD.build_flags}
  -D SERIAL_DEBUG=SerialUSB
  -D KNX_DEBUG_SERIAL=SerialUSB
  -D KNX_SERIAL=Serial1
lib_deps = 
  ${config.lib_deps}
  ${config:COMMON.lib_deps}

; debug parameters
[config:DEBUG]
build_flags =
  ; -D DEBUG_DELAY=5000   ; static delay in ms at startup
  -D DEBUG_WAIT_FOR_SERIAL=10000   ; wait at startup until SERIAL_DEBUG is connected or timeout (when defined). DEBUG_DELAY is ignored when active
  -D DEBUG_LOOP_TIME=10  ; will print a info when a loop took more than x ms.
  -D DEBUG_LOG
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D TRACE_LOG1=C.."    
build_unflags =
  -D WATCHDOG
lib_deps = 



[env:build_SAMD]
extends = SAMD
build_flags =
   ${config:SAMD.build_flags}
   ${config:DEBUG.build_flags}
   -D BOARD_MASIFI_V3
  ; -D BOARD_MASIFI_V31
build_unflags = 
   ${config:DEBUG.build_unflags}

[env:build_RP2040]
extends = RP2040
build_flags = 
   ${config:RP2040.build_flags}
   ${config:DEBUG.build_flags}
  ; -D BOARD_SMARTMF_1TE_RP2040
  ; -D BOARD_MASIFI_PICO
  -D BOARD_MASIFI_HFPM_DEVEL2
  ; -D BOARD_MASIFI_V40
build_unflags = 
   ${config:DEBUG.build_unflags}

[env:upload_USB_SAMD]
extends = UPLOAD_USB_SAMD, env:build_SAMD

[env:upload_JLINK_SAMD]
extends = UPLOAD_JLINK, env:build_SAMD

[env:upload_USB_RP2040]
extends = UPLOAD_USB_RP2040, env:build_RP2040

[env:upload_JLINK_RP2040]
extends = UPLOAD_JLINK, env:build_RP2040

; Releases
[env:release_Sensormodul_Breakout_RP2040]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_MASIFI_SENSOR_BREAKOUT

[env:release_Sensormodul_v31_SAMD]
extends = SAMD
build_flags =
   ${config:SAMD.build_flags}
  -D BOARD_MASIFI_V31

[env:release_Sensormodul_v30_SAMD]
extends = SAMD
build_flags =
   ${config:SAMD.build_flags}
  -D BOARD_MASIFI_V3

[env:release_Sensormodul_v40_RP2040]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_MASIFI_V40

[env:release_PiPico_BCU_Connector]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_SIRSYDOM_PIPICO_BCU_CONNECTOR

[env:release_1TE_RP2040_SmartMF]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_SMARTMF_1TE_RP2040

[env:release_OpenKNX_REG1_Base]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_OPENKNX_REG1_BASE

[env:release_RP2040_devel]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_MASIFI_HFPM_DEVEL

[env:release_RealPresence]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_MASIFI_HFPM_DEVEL2

[env:release_RealPresence_v20]
extends = RP2040
build_flags =
   ${config:RP2040.build_flags}
  -D BOARD_MASIFI_HFPM_V20