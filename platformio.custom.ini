;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;
; customer build_flags
;
[custom]
build_flags =
  ${KNX_TP.build_flags}
  -D PMMODULE
  -D LOGICMODULE
  -D OPENKNX_LOOPTIME_WARNING=100
  ; -D KNX_AUTO_ADAPT
  ; -D KNX_WAIT_FOR_ADDR # ensures rx of an address (GA or PA) with higher ACK probability, but takes 7ms in knx.loop()!
  ; -D OPENKNX_LOOPTIME_WARNING=13 # should be set with KNX_WAIT_FOR_ADDR to OPENKNX_LOOPTIME_WARNING + 7
  
; debug parameters
[custom_develop]
extends = custom
build_flags = 
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10  ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE2=Flash.*"
debug_build_flags = -ggdb3





; this config block is for specifing options that are valid for all RP2040-based builds
[RP2040_custom]
extends = RP2040, custom
; platform = https://github.com/maxgerhardt/platform-raspberrypi.git#0b2e90a
; platform_packages = framework-arduinopico @ https://github.com/earlephilhower/arduino-pico/releases/download/2.7.3/rp2040-2.7.3.zip
; board = pipico
build_flags = 
  -D SERIAL_DEBUG=Serial
  -D USE_KNX_DMA_UART=0
  -D USE_KNX_DMA_IRQ=0
  ; -D HF_SERIAL=Serial2
  -Wunused-variable
  ; -iC:/Users/waldemar.porscha@sap.com/.platformio/packages/framework-arduinopico
  ; "@C:/Users/waldemar.porscha@sap.com/.platformio/packages/framework-arduinopico/lib/platform_inc.txt"
  ;-D NCN5120

; this config block is for specifing options that are valid for all RP2040-based develop/debug builds
[RP2040_custom_develop]
extends = RP2040_develop, RP2040_custom, custom_develop
build_flags = 
  ${RP2040_develop.build_flags}
  ${RP2040_custom.build_flags}
  ${custom_develop.build_flags}
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -O0 

; this config block is for specifing options that are valid for all RP2040-based release builds
[RP2040_custom_releases]
extends = RP2040_releases, RP2040_custom, custom
build_flags = 
  ${RP2040_releases.build_flags}
  ${RP2040_custom.build_flags}
  ${custom.build_flags}
  ; "-D OPENKNX_TRACE1=C.*"
  -O0


; this config block is for specifing options that are valid for all SAMD-based builds
[SAMD_custom]
extends = SAMD, custom
build_flags = 
  -D SERIAL_DEBUG=SerialUSB
  -D KNX_DEBUG_SERIAL=SerialUSB
  -D KNX_SERIAL=Serial1

; this config block is for specifing options that are valid for all SAMD-based develop/debug builds
[SAMD_custom_develop]
extends = SAMD_custom, SAMD_develop, custom_develop
build_flags = 
  ${SAMD_develop.build_flags}
  ${SAMD_custom.build_flags}
  ${custom_develop.build_flags}
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -Os 


; this config block is for specifing options that are valid for all SAMD-based release builds
[SAMD_custom_releases]
extends = SAMD_releases, SAMD_custom, custom
build_flags = 
  ${SAMD_releases.build_flags}
  ${SAMD_custom.build_flags}
  ${custom.build_flags}
  -Os


[env:develop_SAMD]
extends = SAMD_custom_develop
build_flags =
  ${SAMD_custom_develop.build_flags}
  -D BOARD_MASIFI_V3
  ; -D BOARD_MASIFI_V31

[env:develop_RP2040]
extends = RP2040_custom_develop, RP2040_2MB
build_flags = 
   ${RP2040_custom_develop.build_flags}
  ; -D BOARD_SMARTMF_1TE_RP2040
  ; -D BOARD_MASIFI_PICO
  -D HF_SERIAL=Serial2
  -D BOARD_MASIFI_HFPM_DEVEL2
  ; -D BOARD_MASIFI_V40

[env:upload_USB_SAMD]
extends = UPLOAD_USB_SAMD, env:develop_SAMD

[env:upload_JLINK_SAMD]
extends = UPLOAD_JLINK, env:develop_SAMD

[env:upload_USB_RP2040]
extends = UPLOAD_USB_RP2040, env:develop_RP2040

[env:upload_JLINK_RP2040]
extends = UPLOAD_JLINK, env:develop_RP2040


; Releases
[env:release_Sensormodul_Breakout_RP2040]
extends = RP2040_custom_releases, RP2040_2MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_MASIFI_SENSOR_BREAKOUT

[env:release_Sensormodul_v31_SAMD]
extends = SAMD_custom_releases
build_flags =
   ${SAMD_custom_releases.build_flags}
  -D BOARD_MASIFI_V31

[env:release_Sensormodul_v30_SAMD]
extends = SAMD_custom_releases
build_flags =
   ${SAMD_custom_releases.build_flags}
  -D BOARD_MASIFI_V3

[env:release_Sensormodul_v40_RP2040]
extends = RP2040_custom_develop, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_MASIFI_V40

[env:release_PiPico_BCU_Connector]
extends = RP2040_custom_releases, RP2040_2MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D OKNXHW_PIPICO_BCU_CONNECTOR

[env:release_1TE_RP2040_SmartMF]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_SMARTMF_1TE_RP2040

[env:release_OpenKNX_REG1_Controller2040]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D OKNXHW_REG1_CONTROLLER2040

[env:release_OpenKNX_REG1_BASE_V1]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
  ${RP2040_custom_releases.build_flags}
  -D OKNXHW_REG1_BASE_V1

[env:release_RP2040_devel]
extends = RP2040_custom_releases, RP2040_2MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D HF_SERIAL=Serial2
  -D BOARD_MASIFI_HFPM_DEVEL

[env:release_RealPresence]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D HF_SERIAL=Serial2
  -D BOARD_MASIFI_HFPM_DEVEL2
  -D OPENKNX_DEBUG

[env:release_RealPresence_v20]
extends = RP2040_custom_releases, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D HF_SERIAL=Serial2
  -D BOARD_MASIFI_HFPM_V20

[env:release_Fingerprint_v13_RP2040]
extends = RP2040_custom_develop, RP2040_16MB
build_flags =
   ${RP2040_custom_releases.build_flags}
  -D BOARD_ABTOOLS_FINGERPRINT_V13

